Managing Kafka consumer groups effectively is crucial for optimizing the consumption of messages and monitoring group activity. Here's a list of essential command-line commands you can use with Kafka's consumer groups:

### 1. **Listing Consumer Groups**
This command lists all consumer groups in a Kafka cluster:
```bash
kafka-consumer-groups --bootstrap-server <broker-list> --list
```
Replace `<broker-list>` with your broker's address, e.g., `localhost:9092`.

### 2. **Describing Consumer Group**
To get detailed information about a specific consumer group, such as current offset, log end offset, lag, and consumer member details:
```bash
kafka-consumer-groups --bootstrap-server <broker-list> --describe --group <group-id>
```
Replace `<group-id>` with the consumer group ID you are interested in.

### 3. **Resetting Offsets**
You can reset the offsets of a consumer group to a specific value, to the earliest or latest position, etc.:
```bash
kafka-consumer-groups --bootstrap-server <broker-list> --group <group-id> --reset-offsets --to-earliest --execute
```
This command resets to the earliest offset. You can also use `--to-latest`, `--shift-by <n>`, `--to-offset <n>`, or `--by-duration <duration-in-PdThHmMsS>`.

### 4. **Deleting a Consumer Group**
To delete a consumer group (this is only possible if the group is empty and has no active members):
```bash
kafka-consumer-groups --bootstrap-server <broker-list> --delete --group <group-id>
```

### 5. **Checking Consumer Group Lag**
The `--describe` command also shows the lag of each consumer in the group, which is the difference between the last offset the consumer has read and the latest offset in the log.

These commands are fundamental for managing consumer groups in Kafka, particularly useful for maintenance and monitoring tasks.

Creating a Kafka consumer within a consumer group using the command line involves using the `kafka-console-consumer` tool provided with Kafka. This tool allows you to read data from a specific topic and is handy for debugging and monitoring purposes.

Hereâ€™s how you can set up and run a Kafka consumer from the command line:

### Command to Run Kafka Consumer

```bash
kafka-console-consumer.sh --bootstrap-server <broker-list> --topic <topic-name> --group <group-id> --from-beginning
```

- Replace `<broker-list>` with the list of Kafka brokers in the cluster (e.g., `localhost:9092`).
- Replace `<topic-name>` with the name of the Kafka topic you want to subscribe to.
- Replace `<group-id>` with the consumer group ID you want to associate this consumer with.

### Explanation of Options

- `--bootstrap-server`: Specifies the Kafka broker list.
- `--topic`: Specifies the Kafka topic to consume messages from.
- `--group`: Associates the consumer with a specific consumer group.
- `--from-beginning`: Tells the consumer to start reading from the beginning of the topic. If this option is not set, it will start reading from where the group left off.

### Additional Useful Options

- `--max-messages <number>`: If you want to limit the number of messages the consumer processes before shutting down.
- `--partition <number>`: To consume messages from a specific partition.
- `--offset <number>`: To start consuming from a specific offset.
- `--property print.key=true`: To print both key and value of the messages (default is false).
- `--formatter <class-name>`: To use a custom formatter class to format the output.

This command provides a straightforward way to launch a Kafka consumer in a consumer group directly from your terminal, which is very useful for testing and development purposes.

bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic your_topic_name --from-beginning --property print.key=true --property print.partition=true
